{"version":3,"sources":["components/modalOverlay/modalOverlay.module.css","components/burgerIngredient/burgerIngredient.module.css","components/userOrdersList/userOrdersList.module.css","utils/utils.ts","utils/src.ts","services/store/auth.ts","services/actions/auth.ts","services/hooks.ts","pages/login.tsx","components/cartBurger/cartBurger.tsx","components/tabBurger/tabBurger.tsx","components/burgerIngredients/burgerIngredients.tsx","components/modalOverlay/modalOverlay.tsx","components/modal/modal.tsx","components/orderDetails/orderDetails.tsx","services/store/burger.ts","components/burgerIngredient/burgerIngredient.tsx","components/burgerConstructor/burgerConstructor.tsx","services/actions/burger.ts","pages/mainPage.tsx","pages/register.tsx","pages/resetPassword.tsx","pages/forgotPassword.tsx","services/store/orderList/actions.ts","components/orderCard/orderCard.tsx","components/userOrdersList/userOrdersList.tsx","pages/profile.tsx","components/protected-route.tsx","components/IngredientDetails/IngredientDetails.tsx","components/orderCardDetails/orderCardDetails.tsx","pages/NotFound404.tsx","pages/FeedPage.tsx","components/header/header.tsx","components/app/app.tsx","services/store/orderList.ts","services/store/index.ts","services/store.ts","services/middleware/socket.ts","index.tsx","pages/profile.module.css","components/orderCardDetails/orderCardDetails.module.css","components/burgerConstructor/burgerConstructor.module.css","components/orderCard/orderCard.module.css","components/header/header.module.css","components/IngredientDetails/IngredientDetails.module.css","components/burgerIngredients/burgerIngredients.module.css","pages/FeedPage.module.css","components/cartBurger/cartBurger.module.css","components/orderDetails/orderDetails.module.css","pages/mainPage.module.css","components/modal/modal.module.css","pages/login.module.css","components/tabBurger/tabBurger.module.css"],"names":["module","exports","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","getDateTime","date","parseDate","parse","delta","res","Intl","DateTimeFormat","hour","minute","timeZoneName","format","daysFromNow","Math","floor","API_URL","FETCH_URL","POST_ENDPOINT","REGISTER","EMAIL_EXIST","PASSWORD_RESET","AUTH","GET_USER","REFRESH_TOKEN","LOGOUT","getResponse","ok","json","Promise","reject","status","fetchData","a","fetch","then","postData","ingredients","method","headers","Authorization","body","JSON","stringify","registerUser","form","emailExist","email","resetPassword","authorization","getUserRequest","getNewToken","token","refreshUser","logoutRequest","authSlice","createSlice","initialState","emailUser","nameUser","registerRequest","registerFailed","checkEmailExistRequest","checkEmailExistFailed","isEmailExist","resetPasswordRequest","resetPasswordFailed","resetPasswordSuccess","authFailed","isLogged","refreshUserRequestFailed","logoutRequestFailed","reducers","state","registerSuccess","action","payload","checkEmailRequest","checkEmailSuccess","checkEmailFailed","authSuccess","userInfoSuccess","logoutSuccess","userInfoFailed","refreshUserFailed","actions","getUserInfo","dispatch","success","user","catch","err","accessToken","split","refreshToken","useDispatch","dispatchHook","useSelector","selectorHook","LoginPage","useState","password","setValue","onChange","e","target","useLocation","auth","login","useCallback","preventDefault","authUser","to","from","className","style","container","onSubmit","type","placeholder","size","link","CartBurger","data","location","counter","burger","id","_id","useDrag","item","collect","monitor","isDragging","dragRef","ref","border","cartBurgerStyles","cart","pathname","background","count","src","image","alt","price","TabBurger","title","filterItems","items","filter","tabBurgerStyles","list","map","BurgerIngredients","tabsRef","useRef","navRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","querySelectorAll","el","classList","add","burgerIngredientsStyles","activeTab","remove","root","rootMargin","threshold","section","observe","tabs","tab","height","overflow","ModalOverlay","onModalClose","modalOverlayStyles","overlay","onClick","Modal","isOpened","children","keyDown","key","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","modal","header","getElementById","OrderDetails","orderNumber","isError","isWithoutBun","isLoading","orderDetailsStyles","order","text","burgerIngredientsSlice","itemsRequest","itemsFailed","orderNumberRequest","orderNumberFailed","burgerIngredients","getIngredientsRequest","getIngredientsSuccess","getIngredientsFailed","getNumberOrderRequest","getNumberOrderSuccess","getNumberOrderFailed","getburgerIngredients","push","ingredient","deleteBurgerIngredient","splice","increaseCounter","decreaseCounter","increasePrice","decreasePrice","moveCard","dragCard","dragIndex","hoverIndex","BurgerIngredient","index","deleteIngredient","useDrop","accept","hover","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","opacity","drag","burgerIngredientStyles","listItem","isLocked","handleClose","thumbnail","BurgerConstructor","isOpenModal","setModal","bun","setBun","setisWithoutBun","ingredientsData","history","useHistory","isHover","isOver","itemIngredient","find","element","itemWithKey","uuidv4","dropRef","bunsIndex","buns","length","getOrder","number","getNumberOrder","isBun","burgerConstructorStyles","wrapper","flexEnd","flex","alignCenter","MainPage","styles","window","innerHeight","error","main","DndProvider","backend","HTML5Backend","RegisterPage","register","registerNewUser","ResetPasswordPage","changePassword","resetOldPassword","ForgotPasswordPage","setEmail","checkEmail","checkEmailExist","connect","createAction","disconnect","OrderCard","orderData","burgerData","orderIngredients","orderIngredient","reduce","previousValue","currentValue","orderIngredientsForImage","slice","first_line","createdAt","flexbox","position","backgroundImage","image_mobile","backgroundRepeat","backgroundColor","backgroundPosition","right","zIndex","UserOrdersList","dataOrders","orderList","orders","ProfilePage","activeName","setActiveName","setIsLogged","activePassword","setActivePassword","save","getRefreshUser","cancel","logout","styleProfile","navItem","navWrapper","nav","activeClassName","active","exact","detail","path","disabled","icon","onBlur","onIconClick","ProtectedRoute","rest","isUserLoaded","setUserLoaded","init","render","Items","characteristic","IngredientDetailsStyles","IngredientDetails","isModal","setIngredient","useParams","matchIngredient","page","img","charectiristics","calories","proteins","fat","carbohydrates","OrderCardDetails","order_number","width","NotFound404","FeedPage","dataOrdersDone","dataOrdersInWork","styleOrder","columns","succcess","total","totalToday","AppHeader","profile","feed","headerStyles","App","WebSocketStatus","modalIngredientOpen","back","goBack","OFFLINE","connectionError","orderListSlice","wsOpen","ONLINE","wsClose","wsError","wsMessage","rootReducer","combineReducers","burgerIngredientsReducer","authReducer","ordersListReducer","orderListMiddleware","wsActions","store","socket","next","wsConnect","wsSendMessage","onOpen","onClose","onError","onMessage","wsDisconnect","WebSocket","onopen","onerror","onmessage","event","parsedData","onclose","send","close","socketMiddleware","OrderListWsConnect","OrderListWsDisconnect","OrderListWsOpen","OrderListWsClose","OrderListWsError","OrderListWsMessage","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","concat","StrictMode"],"mappings":"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","file":"static/js/main.05220b5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modalOverlay_overlay__33PPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"burgerIngredient_listItem__WfpEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"userOrdersList_container__1xnJ8\"};","export function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n  }\r\n  \r\n  export function setCookie(name: string, value: string, props?: any ) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n      const d = new Date();\r\n      d.setTime(d.getTime() + exp * 1000);\r\n      exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n      props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n      updatedCookie += '; ' + propName;\r\n      const propValue = props[propName];\r\n      if (propValue !== true) {\r\n        updatedCookie += '=' + propValue;\r\n      }\r\n    }\r\n    document.cookie = updatedCookie;\r\n  }\r\n  \r\n  export function deleteCookie(name: string) {\r\n    setCookie(name, '', { expires: -1 });\r\n  }\r\n\r\n  // функция форматирования даты\r\nexport function getDateTime(date: string) {\r\n  const parseDate =  new Date(Date.parse(date));\r\n  const nowDate = new Date();\r\n  const delta = nowDate.getTime()-parseDate.getTime();\r\n\r\n  const options: any = { hour: 'numeric', minute: 'numeric', timeZoneName: 'short' };\r\n  const res = new Intl.DateTimeFormat('ru-RU', options).format(parseDate);\r\n\r\n  const daysFromNow = Math.floor(delta/1000/60/60/24);\r\n  switch (daysFromNow) {\r\n      case 0:\r\n          return `Сегодня, ${res}`;\r\n      case 1:\r\n          return `Вчера, ${res}`;\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n          return `${daysFromNow} дня назад, ${res}`;\r\n      default: \r\n          return `${daysFromNow} дней назад, ${res}`;      \r\n  }\r\n}","import {getCookie} from './utils';\r\nimport {TIngredient, TForm} from './types';\r\n\r\ntype TUser = {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\ntype TUserData = {\r\n  success: boolean;\r\n  user: TUser;\r\n}\r\n\r\ntype TToken = {\r\n  success: boolean;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n}\r\n\r\ntype TRegisterData = TUserData & {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n}\r\n\r\ntype TServerResponse = {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\ntype TOrderNumber = TServerResponse & {\r\n  order: {number: number}\r\n}\r\n\r\ntype TIngredientServer = TServerResponse & {\r\n  data: TIngredient[];\r\n}\r\n\r\nconst API_URL = 'https://norma.nomoreparties.space/api';\r\n\r\nconst FETCH_URL = `${API_URL}/ingredients`;\r\nconst POST_ENDPOINT = `${API_URL}/orders`;\r\nconst REGISTER = `${API_URL}/auth/register`;\r\nconst EMAIL_EXIST = `${API_URL}/password-reset`;\r\nconst PASSWORD_RESET = `${API_URL}/password-reset/reset`;\r\nconst AUTH = `${API_URL}/auth/login`;\r\nconst GET_USER = `${API_URL}/auth/user`;\r\nconst REFRESH_TOKEN = `${API_URL}/auth/token`;\r\nconst LOGOUT = `${API_URL}/auth/logout`;\r\n\r\nconst getResponse = <T>(res: Response): Promise<T> => {\r\n  return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\r\n}\r\n\r\n// запрос за данными на сервер для списка доступных игредиентов бургера\r\nexport  const fetchData = async():Promise<TIngredientServer> => {\r\n    return await fetch(FETCH_URL)\r\n    .then(res => getResponse<TIngredientServer>(res));\r\n}\r\n\r\n// получение номера заказа\r\nexport  const postData = async(ingredients: string[]):Promise<TOrderNumber> => {\r\n    return await fetch(POST_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + getCookie('token')\r\n        },\r\n        body: JSON.stringify({\r\n          ingredients\r\n        })\r\n      })\r\n      .then(res => getResponse<TOrderNumber>(res));\r\n}\r\n\r\n// регистрация\r\nexport  const registerUser = async(form: TForm): Promise<TRegisterData> => {\r\n    return await fetch(REGISTER, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(form)\r\n      })\r\n      .then(res => getResponse<TRegisterData>(res));\r\n}\r\n\r\n// проверка существования email\r\nexport  const emailExist = async(email: string): Promise<TServerResponse> => {\r\n  return await fetch(EMAIL_EXIST, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({email})\r\n    })\r\n    .then(res => getResponse<TServerResponse>(res));\r\n}\r\n\r\n// сброс пароля\r\nexport  const resetPassword = async(form: TForm): Promise<TServerResponse> => {\r\n  return await fetch(PASSWORD_RESET, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(form)\r\n    })\r\n    .then(res => getResponse<TServerResponse>(res));\r\n}\r\n\r\n// авторизация\r\nexport  const authorization = async(form: TForm): Promise<TRegisterData> => {\r\n  return await fetch(AUTH, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(form)\r\n    })\r\n    .then(res => getResponse<TRegisterData>(res));\r\n}\r\n\r\n// запрос данных о пользователе\r\nexport  const getUserRequest = async(): Promise<TUserData> => {\r\n  return await fetch(GET_USER, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getCookie('token')\r\n      },\r\n    })\r\n    .then(res => getResponse<TUserData>(res));\r\n}\r\n\r\n// обновление токена\r\nexport  const getNewToken = async(): Promise<TToken> => {\r\n  return await fetch(REFRESH_TOKEN, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({token: getCookie('refreshToken')})\r\n    })\r\n    .then(res => getResponse<TToken>(res));\r\n}\r\n\r\n// обновление данных пользователя\r\nexport  const refreshUser = async(form: TForm): Promise<TUserData> => {\r\n  return await fetch(GET_USER, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + getCookie('token')\r\n      },\r\n      body: JSON.stringify(form)\r\n    })\r\n    .then(res => getResponse<TUserData>(res));\r\n}\r\n\r\n// выход из системы\r\nexport  const logoutRequest = async(): Promise<TServerResponse> => {\r\n  return await fetch(LOGOUT, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({token: getCookie('refreshToken')})\r\n    })\r\n    .then(res => getResponse<TServerResponse>(res));\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype TPayload = {\r\n    email: string; \r\n    name: string;\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState:  {\r\n        emailUser: '',\r\n        nameUser: '',\r\n        registerRequest: false,\r\n        registerFailed: false,\r\n        checkEmailExistRequest: false,\r\n        checkEmailExistFailed: false,\r\n        isEmailExist: false,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: false,\r\n        resetPasswordSuccess: false,\r\n        authFailed: false,\r\n        isLogged: false,\r\n        refreshUserRequestFailed: false,\r\n        logoutRequestFailed: false\r\n    },\r\n    reducers: {\r\n        registerRequest: (state) => {\r\n            state.registerRequest = true;\r\n        },\r\n        registerSuccess: (state, action: PayloadAction<TPayload>) => {\r\n            state.registerFailed = false;\r\n            state.emailUser = action.payload.email;\r\n            state.nameUser = action.payload.name;\r\n            state.registerRequest = false;\r\n            state.isLogged = true;\r\n        },\r\n        registerFailed: (state) => {\r\n            state.registerFailed = true;\r\n            state.registerRequest = false;\r\n        },\r\n        checkEmailRequest: (state) => {\r\n            state.checkEmailExistRequest = true;\r\n        },\r\n        checkEmailSuccess: (state) => {\r\n            state.checkEmailExistFailed = false;\r\n            state.isEmailExist = true;\r\n            state.checkEmailExistRequest = false;\r\n        },\r\n        checkEmailFailed: (state) => {\r\n            state.checkEmailExistFailed = true;\r\n            state.checkEmailExistRequest = false;\r\n        },\r\n        resetPasswordRequest: (state) => {\r\n            state.resetPasswordRequest = true;\r\n        },\r\n        resetPasswordSuccess: (state) => {\r\n            state.resetPasswordFailed = false;\r\n            state.resetPasswordRequest = false;\r\n            state.resetPasswordSuccess = true;\r\n        },\r\n        resetPasswordFailed: (state) => {\r\n            state.resetPasswordFailed = true;\r\n            state.resetPasswordRequest = false;\r\n        },\r\n        authSuccess: (state, action: PayloadAction<TPayload>) => {\r\n            state.authFailed = false;\r\n            state.emailUser = action.payload.email;\r\n            state.nameUser = action.payload.name;\r\n            state.isLogged = true;\r\n        },\r\n        authFailed: (state) => {\r\n            state.authFailed = true;\r\n        },\r\n        userInfoSuccess: (state, action: PayloadAction<TPayload>) => {\r\n            state.emailUser = action.payload.email;\r\n            state.nameUser = action.payload.name;\r\n            state.isLogged = true;\r\n            state.refreshUserRequestFailed = false;\r\n        },\r\n        logoutSuccess: (state) => {\r\n            state.isLogged = false;\r\n            state.logoutRequestFailed = false;\r\n        },\r\n        logoutRequestFailed: (state) => {\r\n            state.logoutRequestFailed = true;\r\n        },\r\n        userInfoFailed: (state) => {\r\n            state.isLogged = false;\r\n        },\r\n        refreshUserFailed: (state) => {\r\n            state.refreshUserRequestFailed = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerFailed,\r\n    checkEmailRequest,\r\n    checkEmailSuccess,\r\n    checkEmailFailed,\r\n    resetPasswordRequest,\r\n    resetPasswordSuccess,\r\n    resetPasswordFailed,\r\n    authSuccess,\r\n    authFailed,\r\n    userInfoSuccess,\r\n    logoutSuccess,\r\n    userInfoFailed,\r\n    refreshUserFailed,\r\n    logoutRequestFailed\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import {registerUser, \r\n        emailExist, \r\n        resetPassword, \r\n        authorization, \r\n        getUserRequest,\r\n        getNewToken,\r\n        refreshUser,\r\n        logoutRequest} from '../../utils/src';\r\nimport {setCookie, deleteCookie} from '../../utils/utils';\r\nimport {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerFailed,\r\n    checkEmailRequest,\r\n    checkEmailSuccess,\r\n    checkEmailFailed,\r\n    resetPasswordRequest,\r\n    resetPasswordSuccess,\r\n    resetPasswordFailed,\r\n    authSuccess,\r\n    authFailed,\r\n    userInfoSuccess,\r\n    logoutSuccess,\r\n    userInfoFailed,\r\n    refreshUserFailed,\r\n    logoutRequestFailed\r\n} from '../store/auth';\r\nimport { TForm } from '../../utils/types'; \r\nimport {  AppDispatch, AppThunk  } from '../store';\r\n\r\n\r\n// регистрируем нового пользователя\r\nexport const registerNewUser: AppThunk = (form: TForm) => (dispatch: AppDispatch) => {\r\n    dispatch(registerRequest());\r\n    return registerUser(form)\r\n           .then(res => {\r\n                if (res && res.success) {\r\n                    setCookie('token', res.accessToken.split('Bearer ')[1]);\r\n                    setCookie('refreshToken', res.refreshToken);\r\n                    dispatch(registerSuccess({email: res.user.email, name: res.user.name}));\r\n                } else {\r\n                    dispatch(registerFailed());\r\n              }\r\n            })\r\n            .catch(() => {\r\n                dispatch(registerFailed());\r\n            })\r\n};\r\n\r\n// проверка на наличие существующего email\r\nexport const checkEmailExist: AppThunk = (email: string) => (dispatch: AppDispatch) => {\r\n    dispatch(checkEmailRequest());\r\n    return emailExist(email)\r\n           .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch(checkEmailSuccess());\r\n                } else {\r\n                    dispatch(checkEmailFailed());\r\n              }\r\n            })\r\n            .catch(() => {\r\n                dispatch(checkEmailFailed());\r\n            })\r\n};\r\n\r\n// сброс пароля\r\nexport const resetOldPassword: AppThunk = (form: TForm) => (dispatch: AppDispatch) => {\r\n    dispatch(resetPasswordRequest());\r\n    return resetPassword(form)\r\n           .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch(resetPasswordSuccess());\r\n                } else {\r\n                    dispatch(resetPasswordFailed());\r\n              }\r\n            })\r\n            .catch(() => {\r\n                dispatch(resetPasswordFailed());\r\n            })\r\n};\r\n\r\n// авторизация\r\nexport const authUser: AppThunk = (form: TForm) => (dispatch: AppDispatch) => {\r\n    return authorization(form)\r\n           .then(res => {\r\n                if (res && res.success) {\r\n                    setCookie('token', res.accessToken.split('Bearer ')[1]);\r\n                    setCookie('refreshToken', res.refreshToken);\r\n                    dispatch(authSuccess({email: res.user.email, name: res.user.name}));\r\n                } else {\r\n                    dispatch(authFailed());\r\n              }\r\n            })\r\n            .catch(() => {\r\n                dispatch(authFailed());\r\n            })\r\n};\r\n\r\n// запрос данных о пользователе\r\nexport const getUserInfo: AppThunk = () => (dispatch: AppDispatch) => {\r\n        return getUserRequest()\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        dispatch(userInfoSuccess({email: res.user.email, name: res.user.name}));\r\n                    }  \r\n                })\r\n                .catch((err) => {\r\n                    if (err === 403) {\r\n                        getNewToken()\r\n                        .then(res => {\r\n                            deleteCookie('token');\r\n                            deleteCookie('refreshToken');\r\n                            setCookie('token', res.accessToken.split('Bearer ')[1]);\r\n                            setCookie('refreshToken', res.refreshToken);\r\n                            getUserRequest();\r\n                        })\r\n                        .catch(() => {\r\n                            dispatch(userInfoFailed());\r\n                        });\r\n                    } else {\r\n                        dispatch(userInfoFailed());\r\n                    }\r\n            })\r\n};\r\n\r\n// обновление пользователя\r\nexport const getRefreshUser: AppThunk = (form: TForm) => (dispatch: AppDispatch) => {\r\n    return refreshUser(form)\r\n        .then(res => {\r\n            if (res && res.success) {\r\n                dispatch(userInfoSuccess({email: res.user.email, name: res.user.name}));\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            if (err === 403) {\r\n                getNewToken()\r\n                .then(res => {\r\n                    deleteCookie('token');\r\n                    deleteCookie('refreshToken');\r\n                    setCookie('token', res.accessToken.split('Bearer ')[1]);\r\n                    setCookie('refreshToken', res.refreshToken);\r\n                    refreshUser(form);\r\n                })\r\n                .catch(() => {\r\n                    dispatch(userInfoFailed());\r\n                });\r\n            } else {\r\n                dispatch(refreshUserFailed());\r\n            }\r\n        })\r\n};\r\n\r\n// разлогин\r\nexport const getLogoutRequest: AppThunk = () => (dispatch: AppDispatch) => {\r\n    return logoutRequest()\r\n           .then(res => {\r\n                if (res && res.success) {\r\n                    deleteCookie('token');\r\n                    deleteCookie('refreshToken');\r\n                    dispatch(logoutSuccess());\r\n                } \r\n            })\r\n            .catch(() => {\r\n                dispatch(logoutRequestFailed());\r\n            });\r\n};","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n  import { AppDispatch, RootState, AppThunk } from '../services/store';\r\n  \r\n  export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","import { useState, useCallback } from 'react';\r\nimport {Button, PasswordInput, Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport style from './login.module.css';\r\nimport { authUser } from '../services/actions/auth';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { getCookie } from '../utils/utils';\r\nimport {Location} from 'history';\r\nimport { TForm, submitCallback } from '../utils/types';\r\n\r\ntype TLoginForm = Pick<TForm, 'email' | 'password'>\r\n\r\ntype LocationState = {\r\n    from: Location;\r\n};\r\n\r\n/**\r\n * Страница логина\r\n */\r\nfunction LoginPage(): React.ReactElement {\r\n    const [form, setValue] = useState<TLoginForm>({ email: '', password: ''});\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const location = useLocation<LocationState>();\r\n    const {state} = location;\r\n\r\n    const isLogged = useSelector(state => state.auth.isLogged);\r\n\r\n    const login = useCallback<submitCallback>(\r\n        e => {\r\n          e.preventDefault();\r\n          dispatch(authUser(form));\r\n        },\r\n        [dispatch,form]\r\n    );\r\n\r\n    // при успешной авторизации редиректим на главную страницу\r\n    if (isLogged || getCookie('refreshToken')) {\r\n        return (\r\n          <Redirect\r\n          to={ state?.from || '/' }\r\n          />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <form className={style.form} onSubmit={login}>\r\n                <h1 className='text text_type_main-medium mb-6'>Вход</h1>\r\n                <span className='mb-6'><Input type='email' placeholder='E-mail' onChange={onChange} value={form.email} name='email'/></span>\r\n                <span className='mb-6'><PasswordInput onChange={onChange} value={form.password} name=\"password\"/></span>\r\n                <Button type=\"primary\" size=\"large\">Войти</Button>\r\n            </form>\r\n            <div className='text text_type_main-small text_color_inactive mt-20'>\r\n                Вы новый пользователь? <Link to='/register' className={style.link}>Зарегистрироваться</Link>\r\n            </div>\r\n            <div className='text text_type_main-small text_color_inactive mt-4'>\r\n                Забыли пароль? <Link to='/forgot-password' className={style.link}>Восстановить пароль</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import cartBurgerStyles from './cartBurger.module.css';\r\nimport {CurrencyIcon, Counter} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { TIngredient } from '../../utils/types';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {Location} from 'history';\r\n\r\ntype TCartBurgerProps = {\r\n    data: TIngredient;\r\n}\r\n\r\n/**\r\n * Компонент записи(ингредиент) в реестре ингредиентов\r\n * @param data - данные ингредиента\r\n * @returns \r\n */\r\nfunction CartBurger({data}: TCartBurgerProps): React.ReactElement {\r\n    let location = useLocation<Location>();\r\n    const counter = useSelector(state => state.burger.counter);\r\n    const id = data._id;\r\n    const type = data.type;\r\n    const [{isDragging}, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: {id, type},\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    });\r\n\r\n        return (\r\n            <>\r\n                <div ref={dragRef} style={{ border: isDragging ? '2px solid lightgreen' : '0px'}} data-qa='ingredient-card' className={`${cartBurgerStyles.cart} mb-8`}>\r\n                    <Link\r\n                        className={cartBurgerStyles.link}\r\n                        to={{\r\n                        pathname: `/ingredients/${id}`,\r\n                        state: { background: location },\r\n                    }}>\r\n                    {!!counter[id] && <Counter count={counter[id]} size='default' />}\r\n                    <img src={data.image} alt='изображение ингредиента'/>\r\n                    <div className={`${cartBurgerStyles.price} mt-1 mb-1`}>\r\n                        <p className='text text_type_digits-default mr-2'>{data.price}</p>\r\n                        <CurrencyIcon type='primary' />\r\n                    </div>\r\n                    <h5 className={`${cartBurgerStyles.name} text text_type_main-default`}>{data.name}</h5>\r\n                    </Link>\r\n                </div>\r\n            </>                                         \r\n        );\r\n    }\r\n\r\nexport default CartBurger;","import tabBurgerStyles from './tabBurger.module.css';\r\nimport CartBurger from '../cartBurger/cartBurger';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { TIngredient } from '../../utils/types';\r\n\r\ntype TTabBurgerProps = {\r\n    title: 'Булки' | 'Соусы' | 'Начинки';\r\n    type: 'bun' | 'sauce' | 'main';\r\n}\r\n\r\n/**\r\n * Компонент отображения вкладки\r\n * @param type - тип булки\r\n * @param title - заголовок вкладки\r\n */\r\nfunction TabBurger({type, title}: TTabBurgerProps): React.ReactElement {\r\n    const burgerData: TIngredient[] = useSelector(state => state.burger.items);\r\n    const filterItems = burgerData.filter((item: TIngredient) => item.type === type);\r\n    return (\r\n        <div>\r\n            <h2 id={type} className='text text_type_main-medium mb-6'>{title}</h2>\r\n            <div className={`${tabBurgerStyles.list} mb-2 pr-4 pl-4`}>\r\n                {filterItems.map((item) => (\r\n                    <CartBurger key={item._id} data={item} />                                \r\n                ))}\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default TabBurger;","import {useEffect, useRef} from 'react';\r\nimport burgerIngredientsStyles from './burgerIngredients.module.css';\r\nimport TabBurger from '../tabBurger/tabBurger';;\r\n\r\n/**\r\n * реестр ингредиентов\r\n */\r\nfunction BurgerIngredients(): React.ReactElement {\r\n\r\n    const tabsRef = useRef<HTMLDivElement>(null);\r\n    const navRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        // рассчитываем выделение вкладки при скролле\r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach((entry) => {\r\n                if(entry.isIntersecting) {\r\n                    const id = entry.target.id;\r\n                    navRef.current?.querySelectorAll('li').forEach((el) => {\r\n                        if (el.id === id) {\r\n                            el.classList.add(`${burgerIngredientsStyles.activeTab}`);\r\n                        } else {\r\n                            el.classList.remove(`${burgerIngredientsStyles.activeTab}`);\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }, {\r\n            root: tabsRef.current,\r\n            rootMargin: '0px 0px -80% 0px',\r\n            threshold: 0.5\r\n        })\r\n        tabsRef.current?.querySelectorAll(\"h2\").forEach(\r\n            (section) => observer.observe(section)\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            <h1 className='text text_type_main-large mt-10 mb-5'>Соберите бургер</h1>\r\n            <nav ref={navRef}>\r\n                <ul className={burgerIngredientsStyles.tabs}>\r\n                    <li className={`${burgerIngredientsStyles.tab}`} id='bun'>Булки</li>\r\n                    <li className={burgerIngredientsStyles.tab} id='sauce'>Соусы</li>\r\n                    <li className={burgerIngredientsStyles.tab} id='main'>Начинки</li>\r\n                </ul>\r\n            </nav>\r\n            <div ref={tabsRef} className=\"pt-10\" style={{ height: '610px', overflow: 'scroll', 'overflowX': 'hidden' }}>\r\n                <TabBurger title='Булки' type='bun' />\r\n                <TabBurger title='Соусы' type='sauce' />\r\n                <TabBurger title='Начинки' type='main' />\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n  \r\n  export default BurgerIngredients;","import modalOverlayStyles from './modalOverlay.module.css';\r\nimport {TModalProps} from '../modal/modal';\r\n\r\ntype TModalOverlay = Pick<TModalProps, 'onModalClose'>;\r\n\r\n/**\r\n * Оверлей для модального окна\r\n * @param onModalClose - функция закрытия модального окна \r\n */\r\nfunction ModalOverlay({onModalClose}: TModalOverlay): React.ReactElement {\r\n    return (\r\n        <div className={modalOverlayStyles.overlay} onClick={onModalClose}></div>\r\n    )\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import ReactDOM from 'react-dom';\r\nimport {useEffect, useCallback} from 'react';\r\nimport modalStyles from './modal.module.css';\r\nimport ModalOverlay from '../modalOverlay/modalOverlay';\r\nimport { CloseIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport type TModalProps = {\r\n    onModalClose: () => void;\r\n    title?: string;\r\n    isOpened: boolean;\r\n    children: React.ReactElement;\r\n}\r\n\r\ntype keyDownCallback = (e: KeyboardEvent) => void;\r\n\r\n/**\r\n * Компонент модального окна\r\n * @param onModalClose - функция закрытия модального окна\r\n * @param title - заголовок модального окна\r\n * @param isOpened - флаг, открыто ли окно\r\n * @param children - содержимое модального окна (компонент)\r\n */\r\nfunction Modal({onModalClose, title, isOpened, children}: TModalProps): React.ReactElement {\r\n\r\n    // закрываем модальное окно по Escape\r\n    const keyDown = useCallback<keyDownCallback>(\r\n        e => {\r\n            if (e.key === 'Escape') {\r\n                onModalClose();\r\n            }\r\n            return;\r\n        },\r\n        [onModalClose]\r\n    );\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', keyDown);\r\n        return () => document.removeEventListener('keydown', keyDown);\r\n    }, [keyDown]);\r\n\r\n    if (!isOpened) { \r\n        return <></>;\r\n    };\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <>\r\n                <ModalOverlay onModalClose={onModalClose}/>\r\n                <div className={`${modalStyles.modal} pl-10 pr-10 pb-10 pt-10`}>\r\n                    <div className={modalStyles.header}>\r\n                        <h3 className='text text_type_main-large'>{title}</h3>\r\n                        <div data-qa='close-icon' onClick={onModalClose} >\r\n                            <CloseIcon type=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                    {children}\r\n                </div>\r\n            </>\r\n        ),\r\n        document.getElementById('modal') as HTMLElement\r\n    )\r\n}\r\n\r\nexport default Modal;","import orderDetailsStyles from './orderDetails.module.css';\r\n\r\ntype TOrderDetails = {\r\n    orderNumber: number;\r\n    isError: boolean;\r\n    isWithoutBun: boolean;\r\n    isLoading: boolean;\r\n}\r\n\r\n/**\r\n * Компонент содержимого заказа\r\n * @param orderNumber- номер заказа\r\n * @param isError- флаг, что нужно показать ошибку при загрузке данных\r\n * @param isLoading- флаг, что нужно показать заглушку, что данные ещё грузятся\r\n * @param isWithoutBun- флаг, что нужно показать ошибку, что не выбрана булка\r\n */\r\nfunction OrderDetails({orderNumber, isError, isWithoutBun, isLoading}: TOrderDetails): React.ReactElement {\r\n    if (isError || isWithoutBun || isLoading) {\r\n        return (\r\n            <div className={`${orderDetailsStyles.order} pl-25 pr-25`}>\r\n                <div className=\"text text_type_main-medium mb-15\">\r\n                {isWithoutBun ? 'Добавьте в бургер булочку' : isLoading ? 'Загрузка' : 'Что-то пошло не так... Перезагрузите страницу'}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className={`${orderDetailsStyles.order} pl-25 pr-25`}>\r\n                {orderNumber && <h1 className='text text_type_digits-large mb-8' data-qa='order-nunber'>{orderNumber}</h1>}\r\n                <p className='text text_type_main-medium mb-15'>идентификатор заказа</p>\r\n                <img src='/images/graphics.png' alt='123' className='mb-15' />\r\n                <p className='text text_type_main-default mb-2'>Ваш заказ начали готовить</p>\r\n                <p className={`${orderDetailsStyles.text} text text_type_main-default text_color_inactive`}>Дождитесь готовности на орбитальной станции</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderDetails;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { TIngredient, TIngredientWithKey } from '../../utils/types';  \r\n\r\ntype TState = {\r\n    items: Array<TIngredient>;\r\n    itemsRequest: boolean;\r\n    itemsFailed: boolean;\r\n    orderNumberRequest: boolean;\r\n    orderNumber: number;\r\n    orderNumberFailed: boolean;\r\n    burgerIngredients: Array<TIngredientWithKey>;\r\n    counter: {[key: string]: number}; \r\n    price: number;\r\n}\r\n\r\nconst initialState: TState = {\r\n    items: [], // итемы игредиентов бургера\r\n    itemsRequest: false,\r\n    itemsFailed: false,\r\n    orderNumberRequest: false,\r\n    orderNumber: 0, // номер заказа\r\n    orderNumberFailed: false,\r\n    burgerIngredients: [], // итемы в конструкторе\r\n    counter: {}, // объект для хранения счетчиков для ингредиентов\r\n    price: 0 // цена заказа\r\n}\r\n\r\nexport const burgerIngredientsSlice = createSlice({\r\n    name: 'burger',\r\n    initialState,\r\n    reducers: {\r\n        getIngredientsRequest: (state) => {\r\n            state.itemsRequest = true;\r\n        },\r\n        getIngredientsSuccess: (state, action: PayloadAction<Array<TIngredient>>) => {\r\n            state.itemsFailed = false;\r\n            state.items = action.payload;\r\n            state.itemsRequest = false;\r\n        },\r\n        getIngredientsFailed: (state) => {\r\n            state.itemsFailed = true;\r\n            state.itemsRequest = false;\r\n        },\r\n        getNumberOrderRequest: (state) => {\r\n            state.orderNumberRequest = true;\r\n        },\r\n        // получаем номер заказа\r\n        getNumberOrderSuccess: (state, action: PayloadAction<number>) => {\r\n            state.orderNumberFailed = false;\r\n            state.orderNumber = action.payload;\r\n            state.orderNumberRequest = false;\r\n            // очищаем конструктор, цену, счетчики\r\n            state.burgerIngredients = [];\r\n            state.price = 0;\r\n            state.counter = {};\r\n        },\r\n        // если апи при получении номера заказа упало\r\n        getNumberOrderFailed: (state) => {\r\n            state.orderNumberFailed = true;\r\n            state.orderNumberRequest = false;\r\n        },\r\n        // ингредиенты, помещенные пользователем в конструктор\r\n        getburgerIngredients: (state, action: PayloadAction<{ingredient: TIngredientWithKey, price: number}>) => {\r\n            state.burgerIngredients.push(action.payload.ingredient);\r\n            state.price = state.price + action.payload.price;\r\n        },\r\n        deleteBurgerIngredient: (state, action: PayloadAction<number>) => {\r\n            state.burgerIngredients.splice(action.payload, 1);\r\n        },\r\n        // увеличиваем счетчик\r\n        increaseCounter: (state, action: PayloadAction<{id: keyof typeof state.counter, counter: number}>) => {\r\n            state.counter[action.payload.id] = action.payload.counter;\r\n        },\r\n        // уменьшаем счетчик\r\n        decreaseCounter: (state, action: PayloadAction<{id: keyof typeof state.counter, counter: number}>) => {\r\n            state.counter[action.payload.id] = action.payload.counter;\r\n        },\r\n        // увеличиваем цену\r\n        increasePrice: (state, action: PayloadAction<number>) => {\r\n            state.price = state.price + action.payload;\r\n        },\r\n        // уменьшаем цену\r\n        decreasePrice: (state, action: PayloadAction<number>) => {\r\n            state.price = state.price - action.payload;\r\n        },\r\n        // перемещение ингрединетов dnd\r\n        moveCard: (state, action: PayloadAction<{dragIndex: number, hoverIndex: number}>) => {\r\n            const dragCard = state.burgerIngredients[action.payload.dragIndex];\r\n            state.burgerIngredients.splice(action.payload.dragIndex, 1);\r\n            state.burgerIngredients.splice(action.payload.hoverIndex, 0, dragCard);\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    getIngredientsRequest, \r\n    getIngredientsSuccess, \r\n    getIngredientsFailed, \r\n    getNumberOrderSuccess,\r\n    getNumberOrderFailed,\r\n    getburgerIngredients,\r\n    increaseCounter,\r\n    deleteBurgerIngredient,\r\n    decreaseCounter,\r\n    getNumberOrderRequest,\r\n    increasePrice,\r\n    decreasePrice,\r\n    moveCard\r\n} = burgerIngredientsSlice.actions;\r\n\r\nexport default burgerIngredientsSlice.reducer;","import {ConstructorElement, DragIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrop, useDrag, DropTargetMonitor } from \"react-dnd\";\r\nimport {useRef} from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport burgerIngredientStyles from './burgerIngredient.module.css';\r\nimport { moveCard } from '../../services/store/burger';\r\nimport { TIngredient } from '../../utils/types'; \r\n\r\ntype TBurgerIngredientProps = {\r\n    ingredient: TIngredient;\r\n    id?: string;\r\n    index: number;\r\n    deleteIngredient: (item: TIngredient, index: number) => void;\r\n}\r\n\r\n/**\r\n * Компонент записи(ингредиент) в реестре конструктора бургера\r\n * @param ingredient - данные игредиента\r\n * @param id - уникальный uuid ингредиента\r\n * @param index - индекс(положение) ингредиента в реестре\r\n * @param deleteIngredient - функция удаления ингредиента\r\n * @returns \r\n */\r\nfunction BurgerIngredient({ingredient, id, index, deleteIngredient}: TBurgerIngredientProps): React.ReactElement {\r\n    const dispatch = useDispatch();\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'element',\r\n        hover(item: {index: number}, monitor: DropTargetMonitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            // Determine rectangle on screen\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            // Get vertical middle\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            // Determine mouse position\r\n            const clientOffset = monitor.getClientOffset();\r\n            // Get pixels to the top\r\n            if (!clientOffset) {\r\n              return;  \r\n            }\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            // Only perform the move when the mouse has crossed half of the items height\r\n            // When dragging downwards, only move when the cursor is below 50%\r\n            // When dragging upwards, only move when the cursor is above 50%\r\n            // Dragging downwards\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Dragging upwards\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Time to actually perform the action\r\n            dispatch(moveCard({dragIndex, hoverIndex}));\r\n            // Note: we're mutating the monitor item here!\r\n            // Generally it's better to avoid mutations,\r\n            // but it's good here for the sake of performance\r\n            // to avoid expensive index searches.\r\n            item.index = hoverIndex;\r\n    },\r\n})\r\n    const [{isDragging}, drag] = useDrag({\r\n      type: 'element',\r\n      item: () => {\r\n        return { id, index };\r\n    },\r\n      collect: (monitor) => ({\r\n        isDragging: monitor.isDragging(),\r\n    })\r\n})\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n    drag(drop(ref));\r\n\r\n    return (\r\n            <div ref={ref} className={burgerIngredientStyles.listItem} style={{opacity}}>\r\n                {ingredient.type !== 'bun' && <DragIcon type=\"primary\" />}\r\n                {ingredient.type !== 'bun' && \r\n                <ConstructorElement\r\n                    type={undefined}\r\n                    isLocked={false}\r\n                    handleClose={() => deleteIngredient(ingredient, index)}\r\n                    text={ingredient.name}\r\n                    price={ingredient.price}\r\n                    thumbnail={ingredient.image}/> }\r\n            </div>                                \r\n    )\r\n}\r\n\r\nexport default BurgerIngredient;","import {useState, useEffect } from 'react';\r\nimport burgerConstructorStyles from './burgerConstructor.module.css';\r\nimport {ConstructorElement, Button, CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Modal from '../modal/modal'; \r\nimport OrderDetails from '../orderDetails/orderDetails';\r\nimport { getNumberOrder } from '../../services/actions/burger';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { DropTargetMonitor, useDrop } from \"react-dnd\";\r\nimport { \r\n  getburgerIngredients, \r\n  increaseCounter, \r\n  deleteBurgerIngredient, \r\n  decreaseCounter,\r\n  decreasePrice } from '../../services/store/burger';\r\nimport BurgerIngredient from '../burgerIngredient/burgerIngredient';\r\nimport { getCookie } from '../../utils/utils';\r\nimport { TIngredient, TIngredientWithKey } from '../../utils/types';  \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n \r\n\r\ntype TItem = {\r\n  id: string;\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Реестр конструктора бургера\r\n */\r\nfunction BurgerConstructor(): React.ReactElement {\r\n    // стейт для открытия модального окна\r\n    const [isOpenModal, setModal] = useState<boolean>(false);\r\n    // стейт для булочки\r\n    const [bun, setBun] = useState<TIngredient>();\r\n    // стейт для проверки с булочкой заказ или нет\r\n    const [isWithoutBun, setisWithoutBun] = useState<boolean>(false);\r\n    // получаем итемы в конструкторе\r\n    const ingredientsData = useSelector(state => state.burger.burgerIngredients);\r\n\r\n    const dispatch = useDispatch();\r\n    const { orderNumber, orderNumberFailed, orderNumberRequest, price, items, counter } = useSelector(state => state.burger);\r\n    const history = useHistory();\r\n    // завершение перемещения по dnd\r\n    const [{ isHover }, dropRef] = useDrop({\r\n      accept: 'ingredient',\r\n      collect: (monitor: DropTargetMonitor) => ({\r\n        isHover: monitor.isOver(),\r\n      }),\r\n      drop(item: TItem) {\r\n        // меняем количество итемов в конструкторе\r\n        const itemIngredient: TIngredientWithKey | undefined = items.find((element: TIngredient) => element._id === item.id);\r\n            if (itemIngredient) {\r\n                    const itemWithKey = {...itemIngredient, key: uuidv4()};\r\n                if (itemIngredient.type === 'bun') {\r\n                    dispatch(getburgerIngredients({ingredient: itemWithKey, price: itemIngredient.price * 2}));\r\n                } else {\r\n                    dispatch(getburgerIngredients({ingredient: itemWithKey, price: itemIngredient.price}));\r\n                }\r\n        } \r\n        \r\n        // меняем счетчик\r\n        if (item.id in counter) {\r\n          // если да, увеличиваем на один\r\n          dispatch(increaseCounter({id: item.id, counter: counter[item.id] + 1}));\r\n        } else {\r\n          if (item.type === 'bun') {\r\n          // если булка, проставляем изначальное значение 2\r\n          dispatch(increaseCounter({id: item.id, counter: 2}));\r\n          } else {\r\n          // если нет, проставляем значение 1\r\n            dispatch(increaseCounter({id: item.id, counter: 1}));\r\n          }\r\n       } \r\n      },\r\n    });\r\n\r\n    const border = isHover ? '2px solid lightgreen' : '0px';\r\n\r\n    useEffect(() => {\r\n      const bunsIndex: number[] = []; // индекс булки в массиве ingredientsData\r\n      const buns: TIngredient[] = []; // массив item булок\r\n      ingredientsData.forEach((item: TIngredient, index: number) => {\r\n        // проходимся по массиву, если булка, то пушим в массивы для булки\r\n        if (item.type === 'bun') {\r\n          bunsIndex.push(index);\r\n          buns.push(item);\r\n        }\r\n      });\r\n\r\n      /* если в массиве buns булок больше, чем одна, то нужно очистить массив ingredientsData\r\n         от старой булки и обновить стейт, также очищаем вспомогательные массивы\r\n         и не забываем удалить цену старой булки из суммы\r\n      */\r\n      if (buns.length > 1) {\r\n        deleteIngredient(buns[0], bunsIndex[0], true);\r\n        buns.splice(0, 1);\r\n        bunsIndex.splice(0, 1);\r\n      }\r\n\r\n      setBun(buns[0]); // устанавливаем булку\r\n\r\n   }, [ingredientsData]);\r\n\r\n    // Запрос на сервер для получения номера заказа\r\n    const getOrder = (): void => {\r\n      if (getCookie('refreshToken')) {\r\n        // если булочки нет, то запрос на сервер не отправляется\r\n        if (bun) {\r\n          const ingredients = ingredientsData.map((item: TIngredient) => {\r\n            return item._id\r\n          });\r\n          setisWithoutBun(false);\r\n          dispatch(getNumberOrder(ingredients));\r\n        } else {\r\n          setisWithoutBun(true);\r\n        }\r\n        setModal(true);\r\n      } else {\r\n        // если пользователь не авторизован то редиректим на login\r\n        history.push('/login');\r\n      }  \r\n    } \r\n\r\n    // удаление ингредиента\r\n    const deleteIngredient = (item: TIngredient, index: number, isBun: boolean = false): void => {\r\n\r\n      dispatch(deleteBurgerIngredient(index));\r\n      if (item.type === 'bun') {\r\n        dispatch(decreaseCounter({id: item._id, counter: counter[item._id] -2}));\r\n      } else {\r\n        dispatch(decreaseCounter({id: item._id, counter: counter[item._id] -1}));\r\n      }\r\n      dispatch(decreasePrice(isBun ? item.price * 2 : item.price));\r\n    };\r\n\r\n    return (\r\n        <section  ref={dropRef} style={{border}} className={`${burgerConstructorStyles.list} mt-25`} data-qa='constructor-container'>\r\n          <div className={burgerConstructorStyles.wrapper}>\r\n            <div className={`${burgerConstructorStyles.flexEnd}`}>\r\n                {bun && <ConstructorElement \r\n                    type='top' \r\n                    isLocked={true}\r\n                    text={`${bun.name} (верх)`}\r\n                    price={bun.price}\r\n                    thumbnail={bun.image} />}\r\n            </div>  \r\n            <div className={`${burgerConstructorStyles.container} mt-2 mb-2`}>\r\n            {ingredientsData.map((item, index) => (\r\n              <BurgerIngredient key={item.key} id={item.key} ingredient={item} index={index} deleteIngredient={deleteIngredient} />\r\n            ))}\r\n            </div>\r\n            <div className={`${burgerConstructorStyles.flexEnd}`}>\r\n                {bun && <ConstructorElement \r\n                    type='bottom' \r\n                    isLocked={true}\r\n                    text={`${bun.name} (низ)`}\r\n                    price={bun.price}\r\n                    thumbnail={bun.image} />} \r\n            </div>\r\n            </div>\r\n            <div className={`${burgerConstructorStyles.flex} ${burgerConstructorStyles.order} mt-10 mb-13`}>\r\n                <div className={`${burgerConstructorStyles.flex} ${burgerConstructorStyles.alignCenter} mr-10`}>\r\n                    <p className=\"text text_type_digits-medium mr-2\">{price}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <Button data-qa='order-button' type=\"primary\" size=\"large\" onClick={() => getOrder()}>\r\n                    Оформить заказ\r\n                </Button>\r\n            </div>\r\n            {!!orderNumber && <Modal title='' isOpened={isOpenModal} onModalClose={() => setModal(false)}>\r\n                <OrderDetails \r\n                    orderNumber={orderNumber} \r\n                    isError={orderNumberFailed}\r\n                    isLoading={orderNumberRequest}\r\n                    isWithoutBun={isWithoutBun}/>\r\n            </Modal>}\r\n        </section>\r\n    );\r\n}\r\n  \r\nexport default BurgerConstructor;","import {\r\n    getIngredientsRequest, \r\n    getIngredientsSuccess, \r\n    getIngredientsFailed,\r\n    getNumberOrderSuccess,\r\n    getNumberOrderFailed,\r\n    getNumberOrderRequest\r\n} from '../store/burger';\r\nimport {fetchData} from '../../utils/src';\r\nimport {postData} from '../../utils/src';\r\nimport { AppDispatch, AppThunk } from '../store'; \r\n\r\n// получаем все доступные ингредиенты для бургеров\r\nexport const getBurgerIngredients: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch(getIngredientsRequest());\r\n    return fetchData()\r\n           .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch(getIngredientsSuccess(res.data));\r\n                } else {\r\n                    dispatch(getIngredientsFailed());\r\n              }\r\n            })\r\n            .catch(() => {\r\n                dispatch(getIngredientsFailed());\r\n            })\r\n};\r\n\r\n// получаем номер заказа\r\nexport const getNumberOrder = (ingredients: string[] ) => (dispatch: AppDispatch) => {\r\n    dispatch(getNumberOrderRequest());\r\n    return postData(ingredients)\r\n           .then((res) => {\r\n                if (res && res.success) {\r\n                    dispatch(getNumberOrderSuccess(res.order.number));\r\n                } else {\r\n                    dispatch(getNumberOrderFailed());\r\n              }\r\n            })\r\n            .catch(() => {\r\n                dispatch(getNumberOrderFailed());\r\n            })\r\n};","import BurgerIngredients from '../components/burgerIngredients/burgerIngredients';\r\nimport BurgerConstructor from '../components/burgerConstructor/burgerConstructor';\r\nimport style from './mainPage.module.css';\r\nimport { useSelector } from '../services/hooks';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\n/**\r\n * Главная страница\r\n */\r\nfunction MainPage(): React.ReactElement {\r\n  const { itemsFailed, itemsRequest, items } = useSelector(state => state.burger);\r\n\r\n  const styles = {\r\n    height: window.innerHeight,\r\n    overflow: 'hidden'\r\n  };\r\n\r\n  if (itemsFailed) {\r\n    return (\r\n      <div style={styles} className={style.error}>\r\n        Что-то пошло не так... Перезагрузите страницу\r\n      </div>\r\n    )\r\n  } else if (itemsRequest) {\r\n    return (\r\n      <div style={styles} className={style.error}>\r\n        Загрузка...\r\n      </div> \r\n    )\r\n  } else {\r\n    return (\r\n      <div style={styles}>\r\n        <main className={style.main}>\r\n          <DndProvider backend={HTML5Backend}>\r\n              {!!items.length && <BurgerIngredients />}\r\n              {!!items.length && <BurgerConstructor />}\r\n          </DndProvider>    \r\n        </main>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import { useState, useCallback } from 'react';\r\nimport {Button, PasswordInput, Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './login.module.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { registerNewUser } from '../services/actions/auth';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { getCookie } from '../utils/utils';\r\nimport { TForm, submitCallback } from '../utils/types';\r\n\r\n/**\r\n * Страница регистрации\r\n */\r\nfunction RegisterPage(): React.ReactElement {\r\n    const [form, setValue] = useState<TForm>({ email: '', password: '', name: '' });\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const {nameUser, registerRequest, registerFailed} = useSelector(state => state.auth);\r\n\r\n    const register = useCallback<submitCallback>(\r\n        e => {\r\n          e.preventDefault();\r\n          dispatch(registerNewUser(form));\r\n        },\r\n        [dispatch,form]\r\n    );\r\n\r\n    // при успешной регистрации редиректим на главную страницу\r\n    if (nameUser || getCookie('refreshToken')) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/'\r\n            }}\r\n          />\r\n        );\r\n    }\r\n    \r\n    // при загрузке или неудачной регистрации\r\n    if (registerFailed || registerRequest) {\r\n        return (\r\n            <div className={style.container}>\r\n                <span className='text text_type_main-large'>{registerFailed ? 'Что-то пошло не так, регистрация не удалась, перезагрузите страницу и попробуйте заново' : 'Загрузка...'}</span>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className={style.container}>\r\n            <form className={style.form} onSubmit={register}>\r\n                <h1 className='text text_type_main-medium mb-6'>Регистрация</h1>\r\n                <span className='mb-6'><Input type='text' placeholder='Имя' onChange={onChange} value={form.name} name=\"name\"/></span>\r\n                <span className='mb-6'><Input type='email' placeholder='E-mail' onChange={onChange} value={form.email} name=\"email\"/></span>\r\n                <span className='mb-6'><PasswordInput onChange={onChange} value={form.password} name=\"password\"/></span>\r\n                <Button type=\"primary\" size=\"large\">Зарегистрироваться</Button>\r\n            </form>\r\n            <div className='text text_type_main-small text_color_inactive mt-20'>\r\n                Уже зарегистрированы? <Link to='/login' className={style.link}>Войти</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import { useState, useCallback } from 'react';\r\nimport {Button, Input, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport style from './login.module.css';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { resetOldPassword } from '../services/actions/auth';\r\nimport { getCookie } from '../utils/utils';\r\nimport { submitCallback } from '../utils/types';\r\n\r\ntype TForm = {\r\n  password: string;\r\n  token: string;\r\n}\r\n\r\n/**\r\n * Страница сброса пароля\r\n */\r\nfunction ResetPasswordPage(): React.ReactElement {\r\n    const [form, setValue] = useState<TForm>({ password: '', token: ''});\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const {resetPasswordSuccess, isLogged, isEmailExist} = useSelector(state => state.auth);\r\n\r\n    const changePassword = useCallback<submitCallback>(\r\n        e => {\r\n          e.preventDefault();\r\n          dispatch(resetOldPassword(form));\r\n        },\r\n        [dispatch, form]\r\n    );\r\n\r\n    // при успешной смене пароля редиректим на страницу профиля\r\n    if (resetPasswordSuccess) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/profile'\r\n            }}\r\n          />\r\n        );\r\n    }\r\n\r\n    // если пользователь авторизован он не может перейти на страницу изменения пароля\r\n    if (isLogged || getCookie('refreshToken')) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/'\r\n            }}\r\n          />\r\n        );\r\n    }\r\n\r\n    // если пользователь попал не со страницы восстановления пароля, то редиректим его\r\n    if (!isEmailExist) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login'\r\n            }}\r\n          />\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div className={style.container}>\r\n        <form className={style.form} onSubmit={changePassword}>\r\n          <h1 className='text text_type_main-medium mb-6'>Восстановление пароля</h1>\r\n          <span className='mb-6'><PasswordInput onChange={onChange} value={form.password} name='password'/></span>\r\n          <span className='mb-6'><Input type='text' placeholder='Введите код из письма' onChange={onChange} value={form.token} name='token'/></span>\r\n          <Button type=\"primary\" size=\"large\">Сохранить</Button>\r\n        </form>\r\n        <div className='text text_type_main-small text_color_inactive mt-20'>\r\n          Вспомнили пароль? <Link to='/login' className={style.link}>Войти</Link>\r\n        </div> \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordPage;","import { useState, useCallback } from 'react';\r\nimport {Button, Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport style from './login.module.css';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { checkEmailExist } from '../services/actions/auth';\r\nimport { getCookie } from '../utils/utils';\r\nimport { submitCallback } from '../utils/types';\r\n\r\n/**\r\n * страница Забыли пароль\r\n */\r\nfunction ForgotPasswordPage(): React.ReactElement {\r\n    const [email, setEmail] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const {checkEmailExistRequest, checkEmailExistFailed, isEmailExist, isLogged} = useSelector(state => state.auth);\r\n\r\n    const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    };\r\n\r\n    const checkEmail = useCallback<submitCallback>(\r\n        e => {\r\n          e.preventDefault();\r\n          dispatch(checkEmailExist(email));\r\n        },\r\n        [dispatch, email]\r\n    );\r\n\r\n    // при успешной регистрации редиректим на страницу сброса пароля\r\n    if (isEmailExist) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/reset-password'\r\n            }}\r\n          />\r\n        );\r\n    }\r\n\r\n    // если пользователь авторизован он не может перейти на страницу изменения пароля\r\n    if (isLogged || getCookie('refreshToken')) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/'\r\n            }}\r\n          />\r\n        );\r\n    }\r\n\r\n    if (checkEmailExistRequest || checkEmailExistFailed) {\r\n        return (\r\n            <div className={style.container}>\r\n                <span className='text text_type_main-large'>{checkEmailExistFailed ? 'Что-то пошло не так, перезагрузите страницу и попробуйте заново' : 'Загрузка...'}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div className={style.container}>\r\n        <form className={style.form} onSubmit={checkEmail}>\r\n          <h1 className='text text_type_main-medium mb-6'>Восстановление пароля</h1>\r\n          <span className='mb-6'><Input type='email' placeholder='Укажите e-mail' onChange={onChangeEmail} value={email}/></span>\r\n          <Button type=\"primary\" size=\"large\">Восстановить</Button>\r\n        </form>\r\n        <div className='text text_type_main-small text_color_inactive mt-20'>\r\n          Вспомнили пароль? <Link to='/login' className={style.link}>Войти</Link>\r\n        </div> \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const connect = createAction<string, 'ORDER_LIST_CONNECT'>('ORDER_LIST_CONNECT');\r\nexport const disconnect = createAction('ORDER_LIST_DISCONNECT');","import style from './orderCard.module.css';\r\nimport { getDateTime } from '../../utils/utils';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {TOrder, TIngredientWithKey} from '../../utils/types';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {Location} from 'history';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ntype TOrderCardProps = {\r\n    orderData: TOrder,\r\n    key: number\r\n}\r\n\r\n\r\n/**\r\n * Карточка заказа в реестре\r\n * @param orderData - данные о заказе\r\n */\r\nfunction OrderCard({orderData}: TOrderCardProps): React.ReactElement {\r\n    let location = useLocation<Location>();\r\n    const burgerData = useSelector(state => state.burger.items);\r\n    const orderIngredients: TIngredientWithKey[] = [];\r\n\r\n    // получаем данные об ингредиентах\r\n    for (let orderIngredient of orderData.ingredients) {\r\n        burgerData.forEach((item) => {\r\n            if (item._id === orderIngredient) {\r\n                orderIngredients.push({...item, key: uuidv4()});\r\n            }\r\n        })\r\n    }\r\n    \r\n    // высчитываем стоимость\r\n    const price = orderIngredients.reduce((previousValue, currentValue) => {\r\n        return previousValue + currentValue.price;\r\n    }, 0);\r\n\r\n    const orderIngredientsForImage = orderIngredients.slice(0, 6);\r\n    \r\n    if (!orderData) {\r\n        return(\r\n            <></>\r\n        );\r\n    }\r\n    \r\n    return(\r\n        <Link className={style.link}\r\n              to={{\r\n              pathname: `${location.pathname}/${orderData._id}`,\r\n              state: { background: location },\r\n              }}>\r\n        <div className={`${style.container} pt-6 pr-6 pl-6 pb-6 mt-4 mr-2`}>\r\n            <div className={style.first_line}>\r\n                <p className=\"text text_type_digits-default\">#{orderData.number}</p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{getDateTime(orderData.createdAt)}</p>\r\n            </div>\r\n            <div title={orderData.name} className={`${style.name} text text_type_main-medium pt-6`}>{orderData.name}</div>\r\n            <div className={`${style.first_line} pt-6`}>\r\n                <div className={style.flexbox}>\r\n                    {orderIngredientsForImage.map((item, index) => (\r\n                        <div key={item.key} className={style.ingredient} \r\n                             style={{\r\n                                 position: 'relative',\r\n                                 backgroundImage: `url(${item.image_mobile})`, \r\n                                 backgroundRepeat: 'no-repeat', \r\n                                 backgroundColor: '#131316',\r\n                                 backgroundPosition: '50% 50%',\r\n                                 right: index * 10 + \"px\",\r\n                                 zIndex: 100 - index\r\n                             }}>\r\n                        </div>                                     \r\n                    ))}\r\n                </div>\r\n                <div className={style.flexbox}>\r\n                    <div className=\"text text_type_digits-default mr-2\">{price}</div>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default OrderCard;","import { useSelector, useDispatch } from '../../services/hooks';\r\nimport {useEffect } from 'react';\r\nimport {connect, disconnect} from '../../services/store/orderList/actions';\r\nimport OrderCard from '../orderCard/orderCard';\r\nimport style from './userOrdersList.module.css';\r\nimport { getCookie } from '../../utils/utils';\r\n\r\nfunction UserOrdersList(): React.ReactElement {\r\n    const dispatch = useDispatch();\r\n    useEffect(()=> {\r\n      dispatch(connect(`wss://norma.nomoreparties.space/orders?token=${getCookie('token')}`));\r\n      return () => {\r\n        dispatch(disconnect());\r\n      }\r\n    }, [dispatch]);\r\n\r\n    const dataOrders = useSelector(state => state.orderList.orders);\r\n\r\n    if (!dataOrders?.orders.length) {\r\n        return(\r\n            <div className='text text_type_main-medium'>\r\n                У вас ещё нет заказов\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {dataOrders?.orders.map((item, index) => (\r\n                <OrderCard key={index} orderData={item} />                                     \r\n            ))}\r\n        </div>\r\n)\r\n}\r\n\r\nexport default UserOrdersList;","import { useEffect, useState, useCallback } from 'react';\r\nimport {EmailInput, Input, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './login.module.css';\r\nimport styleProfile from './profile.module.css';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { getUserInfo, getRefreshUser, getLogoutRequest} from '../services/actions/auth';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { getCookie } from '../utils/utils';\r\nimport { TForm, submitCallback } from '../utils/types';\r\nimport UserOrdersList from '../components/userOrdersList/userOrdersList';\r\n\r\nexport type clickCallback = (e: React.SyntheticEvent) => void;\r\n\r\n/**\r\n * Страница личного кабинета\r\n */\r\nfunction ProfilePage(): React.ReactElement {\r\n    const dispatch = useDispatch();\r\n    const {emailUser, nameUser, refreshUserRequestFailed, logoutRequestFailed} = useSelector(state => state.auth);\r\n    const [activeName, setActiveName] = useState<boolean>(true);\r\n    const [isLogged, setIsLogged] = useState<boolean>(true);\r\n    const [activePassword, setActivePassword] = useState<boolean>(true);\r\n    const [form, setValue] = useState<TForm>({ email: emailUser, password: '', name: nameUser });\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    useEffect(()=> {\r\n        dispatch(getUserInfo());\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        setValue({ email: emailUser, password: '', name: nameUser });\r\n    }, [emailUser, nameUser]);\r\n\r\n    const save = useCallback<submitCallback>(\r\n        e => {\r\n          e.preventDefault();\r\n          dispatch(getRefreshUser(form));\r\n        },\r\n        [dispatch,form]\r\n    );\r\n\r\n    const cancel = useCallback<clickCallback>(\r\n        e => {\r\n          e.preventDefault();\r\n          setValue({ email: emailUser, password: '', name: nameUser });\r\n        },\r\n        [dispatch,form]\r\n    );\r\n\r\n    // разлогин\r\n    const logout = useCallback(\r\n        async () => {\r\n            await dispatch(getLogoutRequest());\r\n            setIsLogged(false);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    // если пользователь не авторизован редиректим на логин\r\n    if (!isLogged || !getCookie('refreshToken')) {\r\n        return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login'\r\n              }}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (logoutRequestFailed) {\r\n        return (\r\n            <div className={`${styleProfile.navItem} text text_type_main-medium`}>\r\n                Что-то пошло не так... перезагрузите страницу и заново нажмите \"Выход\" для выхода\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n            <div className={styleProfile.container}>\r\n                <div className={styleProfile.navWrapper}>\r\n                    <nav className={styleProfile.nav}>\r\n                        <NavLink activeClassName={styleProfile.active} className={`${styleProfile.navItem} text text_type_main-medium text_color_inactive`} exact to={{pathname: '/profile'}}>Профиль</NavLink>\r\n                        <NavLink activeClassName={styleProfile.active} className={`${styleProfile.navItem} text text_type_main-medium text_color_inactive`} exact to={{pathname: '/profile/orders'}}>История заказов</NavLink>\r\n                        <div className={`${styleProfile.navItem} text text_type_main-medium text_color_inactive`} onClick={logout}>Выход</div>   \r\n                    </nav>\r\n                    <div className='text text_type_main-small text_color_inactive'>В этом разделе вы можете изменить свои персональные данные</div>\r\n                </div>\r\n                <div className={styleProfile.detail}>\r\n                <Switch>\r\n                    <Route path='/profile' exact={true}>\r\n                        {!refreshUserRequestFailed && <div className={styleProfile.form}>   \r\n                            <form className={style.form} onSubmit={save}>\r\n                                <span className='mb-6'>\r\n                                    <Input\r\n                                    disabled={activeName} \r\n                                    type='text' \r\n                                    placeholder='Имя'\r\n                                    name='name' \r\n                                    value={form.name} \r\n                                    icon='EditIcon'\r\n                                    onChange={onChange}\r\n                                    onBlur={() => setActiveName(true)}\r\n                                    onIconClick={() => setActiveName(false)}/>\r\n                                </span>\r\n                                <span className='mb-6'>\r\n                                    <EmailInput \r\n                                    value={form.email}\r\n                                    name='email' \r\n                                    onChange={onChange}/>\r\n                                </span>\r\n                                <span className='mb-6'>\r\n                                    <Input \r\n                                    disabled={activePassword} \r\n                                    type='password' \r\n                                    placeholder='Пароль'\r\n                                    name='password' \r\n                                    value={form.password} \r\n                                    icon='EditIcon'\r\n                                    onChange={onChange}\r\n                                    onBlur={() => setActivePassword(true)} \r\n                                    onIconClick={() => setActivePassword(false)}/>\r\n                                </span>\r\n                                <div>\r\n                                    <span className='mr-4'><Button type=\"primary\" size=\"large\">Сохранить</Button></span>\r\n                                    <Button type=\"primary\" size=\"large\" onClick={cancel}>Отмена</Button>\r\n                                </div>\r\n                            </form>\r\n                        </div>}\r\n                        {refreshUserRequestFailed && \r\n                        <>\r\n                            <div className='text text_type_main-medium'>Обновление пользовательских данных не удалось</div>\r\n                            <div className='text text_type_main-medium'>Обновите страницу</div>\r\n                        </>\r\n                        }    \r\n                    </Route>\r\n                    <Route path='/profile/orders' exact={true}>\r\n                        <UserOrdersList />\r\n                    </Route>    \r\n                </Switch>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import { Redirect, Route } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { getUserInfo } from '../services/actions/auth';\r\nimport { RouteProps } from 'react-router';\r\n\r\nexport function ProtectedRoute({ children, ...rest }: RouteProps): React.ReactElement {\r\n    const [isUserLoaded, setUserLoaded] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const init = async (): Promise<void> => {\r\n        await dispatch(getUserInfo());\r\n        setUserLoaded(true);\r\n    };\r\n\r\n    useEffect(()=> {\r\n        init();\r\n    }, []);\r\n\r\n    const {isLogged} = useSelector(state => state.auth);\r\n\r\n    if (!isUserLoaded) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            isLogged ? (\r\n            children\r\n            ) : (\r\n            <Redirect\r\n                to={{\r\n                pathname: '/login',\r\n                state: { from: location }\r\n                }}\r\n            />\r\n            )\r\n        }\r\n        />\r\n    );\r\n}\r\n","import IngredientDetailsStyles from './IngredientDetails.module.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport { TIngredient } from '../../utils/types'; \r\n\r\ntype TIngredientDetailsProps = {\r\n    isModal?: boolean;\r\n}\r\n\r\ntype TItems = {\r\n    title: 'Калории, ккал' | 'Белки, г' | 'Жиры, г' | 'Углеводы, г';\r\n    characteristic: number | undefined;\r\n}\r\n\r\n/**\r\n * Компонент отображения состава игредиента\r\n * @param title - название характеристики ингредиента\r\n * @param characteristic - числовое выражение характеристики\r\n * @returns \r\n */\r\nconst Items: React.FC<TItems> = ({title, characteristic}) => {\r\n    return (\r\n        <div className={IngredientDetailsStyles.item}>\r\n            <p className='text_color_inactive text text_type_main-default' data-qa='ingredient-characteristic-title'>{title}</p>\r\n            <p className='text_color_inactive text text_type_digits-default' data-qa='ingredient-characteristic'>{characteristic}</p>\r\n        </div> \r\n    )\r\n}\r\n\r\n/**\r\n * Данные игредиента (открываются в модальном окне и в отдельной странице)\r\n */\r\nfunction IngredientDetails({isModal}: TIngredientDetailsProps): React.ReactElement {\r\n    const [ingredient, setIngredient] = useState<TIngredient>();\r\n    const { itemsFailed, itemsRequest, items } = useSelector(state => state.burger);\r\n    const { id } = useParams<{id: string}>();\r\n    \r\n    useEffect(\r\n        () => {\r\n            const matchIngredient = items.find((item: TIngredient) => item._id === id);\r\n            setIngredient(matchIngredient);\r\n        },\r\n        [items]\r\n    );\r\n\r\n    if ((!ingredient || !items.length) ) {\r\n        return <></>;\r\n    }\r\n\r\n    if (itemsFailed) {\r\n        return (\r\n          <div className={IngredientDetailsStyles.page}>\r\n            Что-то пошло не так... Перезагрузите страницу\r\n          </div>\r\n        )\r\n    } else if (itemsRequest) {\r\n        return (\r\n          <div className={IngredientDetailsStyles.page}>\r\n            Загрузка...\r\n          </div> \r\n        )\r\n    } else {\r\n    return (\r\n        <div className={!isModal ? `${IngredientDetailsStyles.page}` : 'ml-25 mr-25'}>\r\n            {!isModal && <h3 className='text text_type_main-large'>Детали ингредиента</h3>}\r\n            <img src={ingredient.image} className={`${IngredientDetailsStyles.img} mb-4`} alt='изображение ингредиента'/>\r\n            <h5 className={`${IngredientDetailsStyles.title} text text_type_main-medium mb-8`} data-qa='ingredient-name'>{ingredient.name}</h5>\r\n            <div className={`${IngredientDetailsStyles.charectiristics} mb-15`}>\r\n                <Items title='Калории, ккал' characteristic={ingredient.calories} />\r\n                <Items title='Белки, г' characteristic={ingredient.proteins} />\r\n                <Items title='Жиры, г' characteristic={ingredient.fat} />\r\n                <Items title='Углеводы, г' characteristic={ingredient.carbohydrates} />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IngredientDetails;","import { useSelector, useDispatch } from '../../services/hooks';\r\nimport style from './orderCardDetails.module.css';\r\nimport { useEffect } from 'react';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getDateTime } from '../../utils/utils';\r\nimport {TOrder, TIngredientWithKey} from '../../utils/types';\r\nimport { useParams } from 'react-router-dom';\r\nimport {connect, disconnect} from '../../services/store/orderList/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ntype TOrderCardDetailsProps = {\r\n    isModal?: boolean;\r\n}\r\n\r\n/**\r\n * Детальная карточка ингредиента\r\n * \r\n */\r\nfunction OrderCardDetails({isModal}: TOrderCardDetailsProps): React.ReactElement {\r\n    const dispatch = useDispatch();\r\n\r\n    const dataOrders = useSelector(state => state.orderList.orders);\r\n    const burgerData = useSelector(state => state.burger.items);\r\n    const { id } = useParams<{id: string}>();\r\n\r\n    useEffect(()=> {\r\n        if (!dataOrders) {\r\n            dispatch(connect('wss://norma.nomoreparties.space/orders/all'));\r\n            return () => {\r\n                dispatch(disconnect());\r\n            }\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // получаем заказ по id\r\n    const order: TOrder | undefined = dataOrders ? dataOrders.orders.find((item: TOrder) => item._id === id) : undefined;\r\n        \r\n    // получаем массив ингредиентов\r\n    const orderIngredients: TIngredientWithKey[] = [];\r\n    if (order) {\r\n        for (let orderIngredient of order.ingredients) {\r\n            burgerData.forEach((item) => {\r\n                if (item._id === orderIngredient) {\r\n                    orderIngredients.push({...item, key: uuidv4()});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // высчитываем стоимость\r\n    let price;\r\n    if (orderIngredients) {\r\n        price = orderIngredients.reduce((previousValue, currentValue) => {\r\n            return previousValue + currentValue.price;\r\n        }, 0);\r\n    }\r\n\r\n    if (!orderIngredients || !order) {\r\n        return <></>;\r\n    }\r\n\r\n    return(\r\n        <div className={isModal ? '' : style.page}>\r\n        <div className={style.container}>\r\n            <p className={`${style.order_number} text text_type_digits-default`}>{`#${order.number}`}</p>\r\n            <h3 className='text text_type_main-medium mb-3 mt-10'>{order.name}</h3>\r\n            <p className={order.status === 'done' ? `${style.success} text text_type_main-small` : 'text text_type_main-small'}>\r\n                {order.status === 'done' ? 'Выполнен' : 'В работе'}\r\n            </p>\r\n            <p className='text text_type_main-medium mt-15'>Состав:</p>\r\n            <div className={`${style.ingredient} mt-4`}>\r\n            {orderIngredients.map((item) => (\r\n                   <div key={item.key} className={`${style.item} mt-4 mr-4`} >\r\n                       <div className={style.flexbox}> \r\n                            <div className={style.border}>\r\n                                <div style={{\r\n                                    position: 'relative',\r\n                                    backgroundImage: `url(${item.image_mobile})`, \r\n                                    backgroundRepeat: 'no-repeat', \r\n                                    backgroundPosition: '50% 50%',\r\n                                    width: '64px',\r\n                                    height: '64px'\r\n                                    }}>\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"text text_type_main-default ml-4\">{item.name}</p> \r\n                        </div>\r\n                        <div className={style.flexbox}>\r\n                            <p className='mr-2 text text_type_digits-default'>{item.type === 'bun' ? '2' : '1'}&times;{item.price}</p>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                   </div>                                      \r\n                ))}\r\n                </div>\r\n                <div className={`${style.item} mt-10`}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{getDateTime(order.createdAt)}</p>\r\n                    <div className={`${style.flexbox} mr-4`}>\r\n                        <p className=\"text text_type_digits-default mr-2\">{price}</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderCardDetails;","import { Link } from 'react-router-dom';\r\nimport style from './login.module.css';\r\n\r\n/**\r\n * Страница 404\r\n */\r\nexport const NotFound404 = (): React.ReactElement => {\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.form}>\r\n        <img src='/images/404.png' />\r\n        <br />\r\n        <Link to='/' className={`${style.link} text text_type_main-medium`}>Перейти в конструктор бургера</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import {useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport styleOrder from './FeedPage.module.css';\r\nimport OrderCard from '../components/orderCard/orderCard';\r\nimport {connect, disconnect} from '../services/store/orderList/actions';\r\nimport {TOrder} from '../utils/types';\r\n\r\n/**\r\n * Лента заказов\r\n */\r\nfunction FeedPage(): React.ReactElement {\r\n    const dispatch = useDispatch();\r\n    useEffect(()=> {\r\n      dispatch(connect('wss://norma.nomoreparties.space/orders/all'));\r\n      return () => {\r\n        dispatch(disconnect());\r\n      }\r\n    }, [dispatch]);\r\n\r\n    const dataOrders = useSelector(state => state.orderList.orders);\r\n\r\n    const dataOrdersDone: number[] = [];\r\n    const dataOrdersInWork: number[] = [];\r\n\r\n    if (dataOrders) {\r\n        dataOrders.orders.forEach((item: TOrder) => {\r\n            if (item.status === 'done') {\r\n                dataOrdersDone.push(item.number);\r\n            } else {\r\n            dataOrdersInWork.push(item.number);\r\n            }\r\n        });\r\n    }\r\n\r\n    const styles = {\r\n        height: window.innerHeight,\r\n        overflow: 'hidden'\r\n    };\r\n  \r\n    return(\r\n        <div style={styles}>\r\n            <div className={styleOrder.main}>\r\n                <div>\r\n                    <h1 className='text text_type_main-large mt-10 mb-5'>Лента заказов</h1>\r\n                    {dataOrders && \r\n                    <div className={styleOrder.container}>\r\n                        {dataOrders.orders.map((item, index) => (\r\n                            <OrderCard key={index} orderData={item} />                                     \r\n                        ))}\r\n                    </div>}\r\n                </div>\r\n                <div className='mt-25 ml-15'>\r\n                    <div className={styleOrder.flexbox}>\r\n                    <div>\r\n                        <p className=\"text text_type_main-medium mb-6\">Готовы:</p>\r\n                        <div className={styleOrder.columns}>\r\n                            {dataOrdersDone.map((item, index) => (\r\n                                <div className={`${styleOrder.succcess} text text_type_digits-default mr-2`} key={index}>{item}</div>                                     \r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"text text_type_main-medium mb-6\">В работе:</p>\r\n                        <div className={styleOrder.columns}>\r\n                            {dataOrdersInWork.map((item, index) => (\r\n                                <div className=\"text text_type_digits-default mr-2\" key={index}>{item}</div>                                     \r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"text text_type_main-medium mt-15\">Выполнено за все время:</div>\r\n                    {dataOrders && \r\n                    <div className=\"text text_type_digits-large\">{dataOrders.total}</div>}\r\n                    <div className=\"text text_type_main-medium mt-15\">Выполнено за сегодня:</div>\r\n                    {dataOrders && \r\n                    <div className=\"text text_type_digits-large\">{dataOrders.totalToday}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FeedPage;","import { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport headerStyles from './header.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {Location} from 'history';\r\n\r\n/**\r\n * Шапка сайта\r\n */\r\nfunction AppHeader(): React.ReactElement {\r\n    const location = useLocation<Location>();\r\n    const constructor = '/';\r\n    const profile = '/profile';\r\n    const feed = '/feed';\r\n    \r\n    return (\r\n        <header className={`${headerStyles.header} pt-4 pb-4`}>\r\n            <div className={headerStyles.items}>\r\n                <Link to='/' data-qa='main-link' className={`${headerStyles.item} mr-2 pt-4 pb-4 pl-5 pr-5`}>\r\n                    <BurgerIcon type={location?.pathname === constructor ? 'primary' : 'secondary'}/>\r\n                    <p className={location?.pathname === constructor ? `${headerStyles.active} ml-2` : 'ml-2 text_color_inactive' }>Конструктор</p>\r\n                </Link>\r\n                <Link to='/feed' className={`${headerStyles.item} pt-4 pb-4 pl-5 pr-5`}>\r\n                    <ListIcon type={location?.pathname === feed ? 'primary' : 'secondary'}/>\r\n                    <p className={location?.pathname === feed ? `${headerStyles.active} ml-2 text text_type_main-default` : 'ml-2 text text_type_main-default text_color_inactive' }>Лента заказов</p>\r\n                </Link>\r\n            </div>\r\n            <Logo />\r\n            <Link to='/profile' data-qa='profile-link' className={`${headerStyles.item} pt-4 pb-4 pl-5 pr-5`}>\r\n                <ProfileIcon type={location?.pathname === profile ? 'primary' : 'secondary'}/>\r\n                <p className={location?.pathname === profile ? `${headerStyles.active} ml-2 text text_type_main-default` : 'ml-2 text text_type_main-default text_color_inactive' } >Личный кабинет</p>\r\n            </Link>\r\n        </header>\r\n    );\r\n  }\r\n  \r\nexport default AppHeader;","import { useEffect } from 'react';\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport LoginPage from '../../pages/login';\r\nimport MainPage from '../../pages/mainPage';\r\nimport RegisterPage from '../../pages/register';\r\nimport ResetPasswordPage from '../../pages/resetPassword';\r\nimport ForgotPasswordPage from '../../pages/forgotPassword';\r\nimport ProfilePage from '../../pages/profile';\r\nimport { ProtectedRoute } from '../protected-route';\r\nimport IngredientDetails from '../IngredientDetails/IngredientDetails';\r\nimport OrderCardDetails from '../orderCardDetails/orderCardDetails';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { NotFound404 } from '../../pages/NotFound404';\r\nimport FeedPage from '../../pages/FeedPage';\r\nimport { getBurgerIngredients } from '../../services/actions/burger';\r\nimport AppHeader from '../../components/header/header';\r\nimport {Location} from 'history';\r\nimport Modal from '../../components/modal/modal';\r\n\r\ntype TLocataionState = {\r\n  from: Location;\r\n  background: Location;\r\n};\r\n\r\ntype THistory = {\r\n  action: string;\r\n}\r\n\r\n/**\r\n * Роутинг приложения\r\n */\r\nfunction App(): React.ReactElement {\r\n  let location = useLocation<TLocataionState>();\r\n  let history = useHistory<THistory>();\r\n  const action = history.action ==='PUSH' || history.action ==='REPLACE';\r\n  const modalIngredientOpen = action && location.state && location.state.background;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(()=> {\r\n    dispatch(getBurgerIngredients())\r\n  }, [dispatch]);\r\n\r\n  let back = () => {\r\n    history.goBack();\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <AppHeader />\r\n        <Switch location={modalIngredientOpen || location}>\r\n          <Route path=\"/\" exact>\r\n            <MainPage />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path=\"/forgot-password\">\r\n            <ForgotPasswordPage />\r\n          </Route>\r\n          <Route path=\"/reset-password\">\r\n            <ResetPasswordPage />\r\n          </Route>\r\n          <Route path=\"/feed\" exact>\r\n            <FeedPage />\r\n          </Route>\r\n          <Route path=\"/ingredients/:id\" exact>\r\n              <IngredientDetails />\r\n          </Route>\r\n          <Route path=\"/feed/:id\" exact>\r\n              <OrderCardDetails />\r\n          </Route>\r\n          <ProtectedRoute path={['/profile', '/profile/orders']} exact>\r\n            <ProfilePage />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path=\"/profile/orders/:id\" exact>\r\n              <OrderCardDetails />\r\n          </ProtectedRoute>\r\n          <Route>\r\n            <NotFound404 />\r\n          </Route>\r\n        </Switch>\r\n        {!!modalIngredientOpen && (<Route path='/ingredients/:id'>\r\n            <Modal title='Детали ингредиента' isOpened={true} onModalClose={() => back()}>\r\n                <IngredientDetails isModal={true}/>\r\n            </Modal>\r\n          </Route>)}\r\n        {!!modalIngredientOpen && (<Route path='/feed/:id'>\r\n            <Modal isOpened={true} onModalClose={() => back()}>\r\n                <OrderCardDetails isModal={true}/>\r\n            </Modal>\r\n          </Route>)}\r\n        {!!modalIngredientOpen && (<Route path='/profile/orders/:id'>\r\n            <Modal isOpened={true} onModalClose={() => back()}>\r\n                <OrderCardDetails isModal={true}/>\r\n            </Modal>\r\n          </Route>)}           \r\n      </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {TOrderResponse} from '../../utils/types';\r\n\r\nenum WebSocketStatus {\r\n    CONNECTING  = 'CONNECTING...',\r\n    ONLINE = 'ONLINE',\r\n    OFFLINE = 'OFFLINE'\r\n}\r\n\r\ntype TState = {\r\n    status: WebSocketStatus,\r\n    connectionError: string,\r\n    orders: TOrderResponse | null\r\n}\r\n\r\nconst initialState: TState = {\r\n    status: WebSocketStatus.OFFLINE,\r\n    connectionError: '',\r\n    orders: null\r\n}\r\n\r\nexport const orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState,\r\n    reducers: {\r\n        wsOpen: (state) => {\r\n            state.status = WebSocketStatus.ONLINE;\r\n        },\r\n        wsClose: (state) => {\r\n            state.status = WebSocketStatus.OFFLINE;\r\n        },\r\n        wsError: (state, action: PayloadAction<string>) => {\r\n            state.connectionError = action.payload;\r\n        },\r\n        wsMessage: (state, action: PayloadAction<TOrderResponse>) => {\r\n            state.orders = action.payload;\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    wsOpen,\r\n    wsClose,\r\n    wsError,\r\n    wsMessage\r\n} = orderListSlice.actions;\r\n\r\nexport default orderListSlice.reducer;","import burgerIngredientsReducer from './burger';\r\nimport authReducer from './auth';\r\nimport ordersListReducer from './orderList';\r\n//import { orderListReducer } from './orderList/reducer';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\n\r\nexport const rootReducer = combineReducers({\r\n    burger: burgerIngredientsReducer,\r\n    auth: authReducer,\r\n    orderList: ordersListReducer\r\n  });","import { configureStore } from '@reduxjs/toolkit';\r\nimport { rootReducer } from '../services/store/index';\r\nimport { socketMiddleware } from '../services/middleware/socket';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { ActionCreator, AnyAction } from 'redux';\r\nimport { connect as OrderListWsConnect, disconnect as OrderListWsDisconnect } from '../services/store/orderList/actions';\r\nimport { \r\n    wsOpen as OrderListWsOpen, \r\n    wsClose as OrderListWsClose, \r\n    wsError as OrderListWsError, \r\n    wsMessage as OrderListWsMessage \r\n} from '../services/store/orderList';\r\n\r\n\r\nconst wsActions = {\r\n    wsConnect: OrderListWsConnect,\r\n    wsDisconnect: OrderListWsDisconnect,\r\n    onOpen: OrderListWsOpen,\r\n    onClose: OrderListWsClose,\r\n    onError: OrderListWsError,\r\n    onMessage: OrderListWsMessage\r\n}\r\n\r\nconst orderListMiddleware = socketMiddleware(wsActions);\r\n\r\nexport type AppThunk<ReturnType = void> = ActionCreator<\r\nThunkAction<ReturnType, RootState, unknown, AnyAction>>;\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: (getDefaultMiddleware) => {\r\n        return getDefaultMiddleware().concat(orderListMiddleware)\r\n    }\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch; \r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { ActionCreatorWithPayload, ActionCreatorWithoutPayload } from \"@reduxjs/toolkit\";\r\nimport { Middleware } from \"redux\";\r\nimport { RootState } from '../store'; \r\n\r\nexport type TwsActionTypes = {\r\n    wsConnect: ActionCreatorWithPayload<string>,\r\n    wsDisconnect: ActionCreatorWithoutPayload,\r\n    wsSendMessage?: ActionCreatorWithPayload<any>,\r\n    onOpen: ActionCreatorWithoutPayload,\r\n    onClose: ActionCreatorWithoutPayload,\r\n    onError: ActionCreatorWithPayload<string>,\r\n    onMessage: ActionCreatorWithPayload<any>\r\n}\r\n\r\nexport const socketMiddleware = (wsActions: TwsActionTypes): Middleware<{}, RootState> => {\r\n    return store => {\r\n      let socket: WebSocket | null = null;\r\n  \r\n      return next => action => {\r\n        const { dispatch } = store;\r\n        const { payload } = action;\r\n        const { wsConnect, wsSendMessage, onOpen, onClose, onError, onMessage, wsDisconnect } = wsActions;\r\n\r\n        if (wsConnect.match(action)) {\r\n          socket = new WebSocket(payload);\r\n        }\r\n        if (socket) {\r\n          socket.onopen = () => {\r\n            dispatch(onOpen());\r\n          };\r\n  \r\n          socket.onerror = () => {\r\n            dispatch(onError('ошибка'));\r\n          };\r\n  \r\n          socket.onmessage = event => {\r\n            const { data } = event;\r\n            const parsedData = JSON.parse(data);\r\n            dispatch(onMessage(parsedData));\r\n          };\r\n  \r\n          socket.onclose = () => {\r\n            dispatch(onClose());\r\n          };\r\n  \r\n          if (wsSendMessage?.match(action)) {\r\n            socket.send(JSON.stringify(payload));\r\n          }\r\n\r\n          if (wsDisconnect?.match(action)) {\r\n            socket.close();\r\n          }\r\n        }\r\n  \r\n        next(action);\r\n      };\r\n    };\r\n  };\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { store } from './services/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__14vWe\",\"navWrapper\":\"profile_navWrapper__1T8pQ\",\"nav\":\"profile_nav__3bWfK\",\"navItem\":\"profile_navItem__2KDaf\",\"active\":\"profile_active__3H1De\",\"form\":\"profile_form__28_M5\",\"detail\":\"profile_detail__3NpYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orderCardDetails_container__2L8Kq\",\"success\":\"orderCardDetails_success__1GqVf\",\"flexbox\":\"orderCardDetails_flexbox__21Tth\",\"border\":\"orderCardDetails_border__sUeqr\",\"ingredient\":\"orderCardDetails_ingredient__3qNY0\",\"item\":\"orderCardDetails_item__1GMTt\",\"page\":\"orderCardDetails_page__335gw\",\"order_number\":\"orderCardDetails_order_number__3MXrS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"burgerConstructor_list__1dHdk\",\"wrapper\":\"burgerConstructor_wrapper__USo0k\",\"container\":\"burgerConstructor_container__1M9mN\",\"listItem\":\"burgerConstructor_listItem__1dzIz\",\"flex\":\"burgerConstructor_flex__2uNID\",\"alignCenter\":\"burgerConstructor_alignCenter__aBSUh\",\"order\":\"burgerConstructor_order__2ub4n\",\"flexEnd\":\"burgerConstructor_flexEnd__2dyEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orderCard_container__To-L7\",\"first_line\":\"orderCard_first_line__12zu2\",\"flexbox\":\"orderCard_flexbox__mzpu_\",\"ingredient\":\"orderCard_ingredient__roY1A\",\"name\":\"orderCard_name__372ZT\",\"link\":\"orderCard_link__1VBrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3rmxf\",\"items\":\"header_items__13OC8\",\"item\":\"header_item__3YTqF\",\"active\":\"header_active__2ZczK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"IngredientDetails_img__2VjEK\",\"title\":\"IngredientDetails_title__3ZhvE\",\"charectiristics\":\"IngredientDetails_charectiristics__25_s8\",\"item\":\"IngredientDetails_item__38cXg\",\"page\":\"IngredientDetails_page__3VOxV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"burgerIngredients_tabs__j11R9\",\"section\":\"burgerIngredients_section__3dk5R\",\"tab\":\"burgerIngredients_tab__2d-Tj\",\"activeTab\":\"burgerIngredients_activeTab__16icR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"FeedPage_main__1qxbH\",\"container\":\"FeedPage_container__33qfz\",\"columns\":\"FeedPage_columns__3SdCK\",\"flexbox\":\"FeedPage_flexbox__KkRRJ\",\"succcess\":\"FeedPage_succcess__2VOSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"cartBurger_cart__3eAft\",\"price\":\"cartBurger_price__1jQVr\",\"name\":\"cartBurger_name__2eaCc\",\"link\":\"cartBurger_link__A_tu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"orderDetails_order__2cPif\",\"text\":\"orderDetails_text__e5wP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"mainPage_main__tNMjO\",\"error\":\"mainPage_error__25Iyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__27dMB\",\"header\":\"modal_header__3zngu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2nIAk\",\"form\":\"login_form__2w70f\",\"input\":\"login_input__2MClZ\",\"link\":\"login_link__3TfZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"tabBurger_list__2ZVo3\"};"],"sourceRoot":""}